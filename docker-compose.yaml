services:
  client-gateway:
    build:
      context: ./backend
    container_name: client-gateway
    ports:
      - '8080:8080'
    volumes:
      - ./backend/src:/usr/src/app/src
    environment:
      - PORT=${CLIENT_GATEWAY_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - REDIS_URL=${REDIS_URL}
      - USERS_SERVICE_URL=${GRPC_USERS_URL}
      - SCORES_SERVICE_URL=${GRPC_SCORES_URL}
    networks:
      - app-score-network
    depends_on:
      - users-ms
      - scores-ms
      - redis

  users-ms:
    ports:
      - '50051:50051'
    build: ./users-microservice
    volumes:
      - ./users-microservice/src:/usr/src/app/src
    environment:
      - PORT=50051
      - DATABASE_URL=${USERS_DB_URL}
      - USERS_SERVICE_GRPC=${GRPC_USERS_URL}
    depends_on:
      - users-db
    networks:
      - app-score-network

  scores-ms:
    ports:
      - '50052:50052'
    build: ./scores-microservice
    volumes:
      - ./scores-microservice/src:/usr/src/app/src
    environment:
      - PORT=50052
      - MONGO_URI=${SCORES_DB_URL}
      - SCORES_SERVICE_GRPC=${GRPC_SCORES_URL}
    depends_on:
      - scores-db
    networks:
      - app-score-network

  users-db:
    container_name: users-db
    image: postgres:16.4
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - app-score-network

  scores-db:
    container_name: scores-db
    image: mongo:latest
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod.log'
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    networks:
      - app-score-network

  redis:
    image: redis:alpine
    ports:
      - 6379:6379
    networks:
      - app-score-network

volumes:
  postgres-data:
  mongo-data:

networks:
  app-score-network:
    driver: bridge
